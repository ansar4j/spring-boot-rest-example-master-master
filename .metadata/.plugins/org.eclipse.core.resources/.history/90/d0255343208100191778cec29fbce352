package com.khoubyari.example.api.rest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import com.khoubyari.example.domain.Discount;
import com.khoubyari.example.domain.Hotel;
import com.khoubyari.example.exception.DataFormatException;
import com.khoubyari.example.service.HotelService;
import com.khoubyari.example.util.DateDiffeent;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/*
 * Demonstrates how to set up RESTful API endpoints using Spring MVC
 */

@RestController
@RequestMapping(value = "/example/v1/discount")
@Api(tags = {"discount"})
public class HotelController extends AbstractRestHandler {

    @Autowired
    private HotelService hotelService;


    @RequestMapping(value = "/{amount}/{customerID}",
            method = RequestMethod.GET,
            produces = {"application/json", "application/xml"})
    @ResponseStatus(HttpStatus.OK)
    @ApiOperation(value = "Get the net amount", notes = "You have to provide a valid hotel ID.")
    public
    @ResponseBody
    Discount getDiscount(@ApiParam(value = "The actual amount.", required = true)
                             @PathVariable("amount") float actualAmount,@PathVariable("customerID") String customerID ,
                             HttpServletRequest request, HttpServletResponse response) throws Exception {
    	
    	Discount discount = new Discount();
    	checkResourceFound(discount); 
    	int discountPercent=0;
    	String customerType=hotelService.getCustomerType(customerID);
    	    	
    	 discountPercent=hotelService.getDiscountPercentage(customerType);	 
    	 
    	 discount.setNetPayableAmount(actualAmount - (actualAmount* discountPercent)/100);
    		
    	    	 	
    	}
    	
    	
    	else {
    		
    		customerJoinDate=hotelService.getJoinDate(customerID);
    		int noOfYears=DateDiffeent.getDiffYears(customerJoinDate, today);
    	    if(noOfYears>2){
    	    	discountPercent=hotelService.getDiscountPercentage("L");
    	    }
    			 
       	    
    		
    		
    		
    		
    		
    		
    	}
    	
    	
        return discount;
    }
    

}
